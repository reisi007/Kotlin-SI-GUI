group 'at.reisisoft'
version '0.1-SNAPSHOT~' +new Date().format('yyyy_MM_dd_HHmm')

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'application'

mainClassName = "at.reisisoft.sigui.ui.MainUI"

ext.kotlin_html = "0.6.+"

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    //Libraries not in a maven repo
    compile fileTree(dir: 'lib', include: '*.jar')

    compile project(':si-gui-commons')
    compile project(':si-gui-download')

    // https://mvnrepository.com/artifact/org.controlsfx/controlsfx
    compile group: 'org.controlsfx', name: 'controlsfx', version: '8.+'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'

    //https://bintray.com/kotlin/kotlinx.html/kotlinx.html
    compile "org.jetbrains.kotlinx:kotlinx-html-jvm:$kotlin_html"

    // https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-test
    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test', version: kotlin_version
    // https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-test-junit
    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test-junit', version: kotlin_version
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
    manifest {
        attributes 'version': version
    }
}

distZip {
    //https://discuss.gradle.org/t/customise-distzip-to-change-root-directory-name/17622/6
    //The target zipfile name should be versioned but
    //internal root directory not. By default the distZip
    //task uses the same property (archiveName) for
    //both. To workaround, suppress the version in
    //the archiveName property (by setting version = null)
    //then, once the task is complete, we rename the
    //zip as a post-processing step to add the version
    //back on.

    //note that archivePath is a derived property.
    //its return value is sensitive to the version
    //property (among others).

    def versionedPath = archivePath
    version = null
    doLast {
        archivePath.renameTo(versionedPath)
    }
}